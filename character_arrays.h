#ifndef __CHARACTER_ARRAYS_H
#define __CHARACTER_ARRAYS_H
//Data Array 

char  arrDataBytes[] = { 
// symbol  
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
// symbol !
0, 0, 0, 24, 24, 24, 24, 24, 24, 0, 24, 24, 0, 0, 0, 0,
// symbol "
0, 0, 0, 124, 124, 124, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
// symbol #
0, 0, 63, 62, 62, 255, 62, 124, 255, 124, 124, 248, 0, 0, 0, 0,
// symbol $
0, 0, 0, 24, 126, 127, 248, 120, 30, 31, 255, 126, 24, 24, 0, 0,
// symbol %
0, 0, 0, 240, 248, 248, 247, 60, 255, 31, 31, 31, 0, 0, 0, 0,
// symbol &
0, 0, 0, 124, 112, 112, 120, 255, 223, 239, 230, 127, 0, 0, 0,0, 
// symbol '
0, 0, 0, 24, 24, 24, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0,
// symbol (
0, 12, 28, 24, 56, 56, 56, 56, 56, 56, 24, 28, 12, 0, 0,0, 
// symbol )
0, 48, 56, 24, 24, 28, 28, 28, 28, 24, 24, 56, 48, 0, 0, 0,
// symbol *
0, 0, 0, 24, 254, 124, 60, 254, 24, 0, 0, 0, 0, 0, 0, 0,
// symbol +
0, 0, 0, 0, 24, 24, 24, 255, 24, 24, 24, 0, 0, 0, 0, 0,
// symbol ,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 28, 56, 56, 0, 0,
// symbol -
0, 0, 0, 0, 0, 0, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
// symbol .
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 60, 0, 0, 0, 0,
// symbol /
0, 0, 0, 7, 14, 14, 28, 28, 56, 56, 48, 112, 96, 224, 0, 0,
// symbol 0
0, 0, 0, 124, 110, 230, 231, 255, 231, 230, 110, 124, 0, 0, 0, 0,
// symbol 1
0, 0, 0, 124, 28, 28, 28, 28, 28, 28, 28, 127, 0, 0, 0, 0,
// symbol 2
0, 0, 0, 124, 206, 6, 14, 12, 28, 56, 112, 254, 0, 0, 0, 0,
// symbol 3
0, 0, 0, 124, 238, 6, 14, 60, 14, 7, 206, 124, 0, 0, 0, 0,
// symbol 4
0, 0, 0, 14, 30, 62, 54, 118, 230, 255, 6, 6, 0, 0, 0, 0,
// symbol 5
0, 0, 0, 254, 224, 224, 252, 14, 6, 6, 206, 124, 0, 0, 0,0, 
// symbol 6
0, 0, 0, 60, 118, 224, 254, 230, 231, 231, 102, 126, 0, 0, 0,0, 
// symbol 7
0, 0, 0, 255, 6, 14, 12, 28, 28, 56, 56, 48, 0, 0, 0, 0,
// symbol 8
0, 0, 0, 126, 238, 230, 110, 60, 238, 231, 231, 126, 0, 0,0, 0, 
// symbol 9
0, 0, 0, 124, 238, 231, 231, 239, 127, 6, 110, 124, 0, 0, 0,0, 
// symbol :
0, 0, 0, 0, 0, 60, 60, 0, 0, 0, 60, 60, 0, 0, 0, 0,
// symbol ;
0, 0, 0, 0, 0, 60, 60, 0, 0, 0, 28, 28, 56, 56, 0, 0,
// symbol <
0, 0, 0, 0, 0, 7, 62, 240, 240, 62, 7, 0, 0, 0, 0, 0,
// symbol =
0, 0, 0, 0, 0, 0, 255, 0, 0, 255, 0, 0, 0, 0, 0, 0,
// symbol >
0, 0, 0, 0, 0, 224, 120, 15, 15, 120, 224, 0, 0, 0,0, 0, 
// symbol ?
0, 0, 0, 62, 102, 6, 14, 24, 24, 0, 56, 56, 0, 0, 0, 0,
// symbol @
0, 0, 0, 62, 119, 227, 255, 223, 251, 251, 255, 224, 112, 62,0, 0, 
// symbol A
0, 0, 0, 60, 60, 60, 126, 126, 126, 126, 231, 231, 0, 0, 0, 0,
// symbol B
0, 0, 0, 252, 238, 230, 238, 252, 238, 231, 231, 254, 0, 0, 0,0, 
// symbol C
0, 0, 0, 62, 118, 224, 224, 224, 224, 224, 118, 62, 0, 0, 0, 0,
// symbol D
0, 0, 0, 252, 238, 230, 231, 231, 231, 230, 238, 252, 0, 0, 0, 0,
// symbol E
0, 0, 0, 254, 224, 224, 224, 254, 224, 224, 224, 254, 0, 0, 0, 0,
// symbol F
0, 0, 0, 127, 112, 112, 112, 126, 112, 112, 112, 112, 0, 0, 0, 0,
// symbol G
0, 0, 0, 62, 119, 224, 224, 239, 231, 231, 119, 62, 0, 0, 0, 0,
// symbol H
0, 0, 0, 231, 231, 231, 231, 255, 231, 231, 231, 231, 0, 0, 0, 0,
// symbol I
0, 0, 0, 254, 56, 56, 56, 56, 56, 56, 56, 254, 0, 0, 0, 0,
// symbol J
0, 0, 0, 62, 14, 14, 14, 14, 14, 206, 238, 124, 0, 0, 0, 0,
// symbol K
0, 0, 0, 231, 238, 252, 248, 248, 252, 238, 238, 231, 0, 0,0, 0, 
// symbol L
0, 0, 0, 224, 224, 224, 224, 224, 224, 224, 224, 254, 0, 0, 0,0, 
// symbol M
0, 0, 0, 231, 247, 255, 255, 255, 255, 227, 227, 227, 0, 0, 0, 0,
// symbol N
0, 0, 0, 231, 247, 247, 255, 255, 255, 255, 239, 239, 0, 0, 0, 0,
// symbol O
0, 0, 0, 124, 110, 231, 231, 231, 231, 231, 110, 124, 0, 0, 0, 0,
// symbol P
0, 0, 0, 252, 238, 230, 230, 238, 252, 224, 224, 224, 0, 0, 0, 0,
// symbol Q
0, 0, 0, 124, 110, 231, 231, 231, 231, 231, 110, 126, 14, 6, 0, 0,
// symbol R
0, 0, 0, 252, 238, 230, 238, 252, 238, 238, 231, 231, 0, 0, 0, 0,
// symbol S
0, 0, 0, 126, 231, 224, 240, 126, 6, 7, 198, 126, 0, 0, 0, 0,
// symbol T
0, 0, 0, 255, 24, 24, 24, 24, 24, 24, 24, 24, 0, 0, 0, 0,
// symbol U
0, 0, 0, 230, 230, 230, 230, 230, 230, 230, 238, 124, 0, 0,0, 0, 
// symbol V
0, 0, 0, 227, 231, 119, 118, 126, 62, 62, 60, 28, 0, 0, 0, 0,
// symbol W
0, 0, 0, 195, 195, 199, 255, 255, 255, 255, 254, 126, 0, 0, 0, 0, 
// symbol X
0, 0, 0, 231, 126, 124, 60, 60, 60, 126, 102, 231, 0, 0, 0, 0,
// symbol Y
0, 0, 0, 231, 238, 126, 60, 56, 56, 56, 56, 56, 0, 0, 0, 0,
// symbol Z
0, 0, 0, 255, 7, 14, 28, 28, 56, 112, 224, 255, 0, 0, 0, 0,
// symbol [
0, 60, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 60, 0, 0, 0,
// symbol "\"
0, 0, 0, 224, 96, 112, 48, 56, 56, 28, 28, 14, 14, 7, 0, 0,
// symbol ]
0, 124, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 124, 0, 0, 0,0,
// symbol ^
0, 0, 0, 60, 60, 126, 231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
// symbol _
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
// symbol `
0, 0, 112, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
// symbol a
0, 0, 0, 0, 0, 126, 102, 7, 127, 231, 239, 127, 0,0, 0, 0, 
// symbol b
0, 224, 224, 224, 224, 252, 238, 231, 231, 231, 238, 252,0, 0, 0, 0, 
// symbol c
0, 0, 0, 0, 0, 62, 118, 224, 224, 224, 118, 62, 0, 0, 0, 0,
// symbol d
0, 7, 7, 7, 7, 127, 111, 231, 231, 231, 111, 127, 0, 0, 0, 0,
// symbol e
0, 0, 0, 0, 0, 60, 110, 231, 255, 224, 102, 62, 0, 0, 0, 0,
// symbol f
0, 31, 24, 56, 56, 255, 56, 56, 56, 56, 56, 56, 0, 0, 0, 0,
// symbol g
0, 0, 0, 0, 0, 127, 111, 231, 231, 231, 111, 127, 7, 110, 60, 0, 
// symbol h
0, 224, 224, 224, 224, 254, 230, 231, 231, 231, 231, 231, 0, 0, 0, 0, 
// symbol i
0, 24, 0, 0, 0, 120, 24, 24, 24, 24, 24, 255, 0, 0, 0, 0,
// symbol j
0, 28, 0, 0, 0, 124, 28, 28, 28, 28, 28, 28, 28, 28, 248,0, 
// symbol k
0, 224, 224, 224, 224, 238, 252, 248, 248, 252, 238, 238, 0,0, 0, 0, 
// symbol l
0, 248, 56, 56, 56, 56, 56, 56, 56, 56, 56, 30, 0, 0, 0, 0,
// symbol m
0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0,
// symbol n
0, 0, 0, 0, 0, 254, 230, 231, 231, 231, 231, 231, 0, 0, 0, 0,
// symbol o
0, 0, 0, 0, 0, 124, 110, 231, 231, 231, 110, 124, 0, 0, 0, 0,
// symbol p
0, 0, 0, 0, 0, 252, 238, 231, 231, 231, 238, 252, 224, 224, 224,0, 
// symbol q
0, 0, 0, 0, 0, 127, 111, 231, 231, 231, 111, 127, 7, 7, 7, 0,
// symbol r
0, 0, 0, 0, 0, 63, 56, 48, 48, 48, 48, 48, 0, 0, 0, 0,
// symbol s
0, 0, 0, 0, 0, 124, 230, 224, 124, 14, 206, 124, 0, 0, 0,0, 
// symbol t
0, 0, 2, 58, 56, 254, 56, 56, 56, 56, 56, 30, 0, 0, 0, 0,
// symbol u
0, 0, 0, 0, 0, 231, 231, 231, 231, 231, 239, 127, 0, 0, 0,0, 
// symbol v
0, 0, 0, 0, 0, 230, 110, 126, 124, 60, 60, 56, 0, 0, 0, 0,
// symbol w
0, 0, 0, 0, 0, 195, 195, 223, 255, 254, 126, 126, 0, 0, 0,0, 
// symbol x
0, 0, 0, 0, 0, 119, 62, 60, 28, 62, 118, 231, 0, 0, 0, 0,
// symbol y
0, 0, 0, 0, 0, 231, 103, 118, 126, 62, 60, 28, 24, 56, 112,0, 
// symbol z
0, 0, 0, 0, 0, 254, 14, 28, 56, 112, 224, 254, 0, 0, 0, 0,
// symbol {
0, 30, 24, 24, 24, 56, 112, 56, 24, 24, 24, 24, 30, 0, 0, 0,
// symbol |
0, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 0, 0,
// symbol }
0, 120, 56, 24, 24, 24, 14, 28, 24, 24, 24, 56, 120, 0, 0,0,
};

//Offset Array 
int  arrOffset[94] = {
	 0, 16, 32, 48, 64, 80, 96, 112, 128, 144, 160,
	 176, 192, 208, 224, 240, 256, 272, 288, 304, 320, 336, 352, 368, 384, 400,
	 416, 432, 448, 464, 480, 496, 512, 528, 544, 560, 576, 592, 608, 624, 640,
	 656, 672, 688, 704, 720, 736, 752, 768, 784, 800, 816, 832, 848, 864, 880, 
	 896, 912, 928, 944, 960, 976, 992, 1008, 1024, 1040, 1056, 1072, 1088, 1104,
	 1120, 1136, 1152, 1168, 1184, 1200, 1216, 1232, 1248, 1264, 1280, 1296, 1312, 
	 1328, 1344, 1360, 1376, 1392, 1408, 1424, 1440, 1456, 1472, 1488
	 };

char charOffset[94] = {
	' ', '!', '"', '#', '$', '%', '&', '\'', '(', ')', '*', '+', ',', '-',
	'.', '/', '0', '1', '2', '3', '4', '5',  '6', '7', '8', '9', ':', ';',
	'<', '=', '>', '?', '@', 'A', 'B', 'C',  'D', 'E', 'F', 'G', 'H', 'I',
	'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',  'R', 'S', 'T', 'U', 'V', 'W',
	'X', 'Y', 'Z', '[', '\\',']', '^', '_',  '`', 'a', 'b', 'c', 'd', 'e',
	'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',  'n', 'o', 'p', 'q', 'r', 's',
	't', 'u', 'v', 'w', 'x', 'y', 'z', '{',  '|', '}',
	};


char full[]=
{
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
};

char empty[]=
{
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
};


#endif // __CHARACTER_ARRAYS_H
